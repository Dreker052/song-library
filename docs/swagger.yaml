basePath: /
definitions:
  models.Song:
    description: Модель песни
    properties:
      SongDetail:
        $ref: '#/definitions/models.SongDetails'
      group:
        description: Название группы
        type: string
      song:
        description: Название песни
        type: string
    type: object
  models.SongDetails:
    properties:
      link:
        description: Ссылка на песню
        type: string
      releaseDate:
        description: Дата выхода песни
        type: string
      text:
        description: Текст песни
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления библиотекой песен.
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Получить список всех песен
      parameters:
      - description: Фильтр по группе
        in: query
        name: group
        type: string
      - description: Фильтр по названию песни
        in: query
        name: song
        type: string
      - description: Поле для сортировки
        in: query
        name: sort
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Лимит записей на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
      summary: Получить все песни
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавить новую песню
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Song'
      summary: Добавить песню
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удалить песню по её ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            type: string
      summary: Удалить песню
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Редактировать песню по её ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
      summary: Редактировать песню
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Получить текст песни по её ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни
          schema:
            type: string
      summary: Получить текст песни
      tags:
      - songs
swagger: "2.0"
